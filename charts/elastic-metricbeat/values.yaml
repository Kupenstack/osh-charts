# Licensed under the Apache License, Version 2.0 (the 'License');
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an 'AS IS' BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Default values for metricbeat
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

---
release_group: null

labels:
  metricbeat:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled
  job:
    node_selector_key: openstack-control-plane
    node_selector_value: enabled

images:
  tags:
    metricbeat: docker.elastic.co/beats/metricbeat-oss:7.1.0
    dep_check: quay.io/airshipit/kubernetes-entrypoint:v1.0.0
    image_repo_sync: docker.io/library/docker:17.07.0
  pull_policy: IfNotPresent
  local_registry:
    active: false
    exclude:
      - dep_check
      - image_repo_sync

secrets:
  elasticsearch:
    user: metricbeat-elasticsearch-user

dependencies:
  dynamic:
    common:
      local_image_registry:
        jobs:
          - metricbeat-image-repo-sync
        services:
          - endpoint: node
            service: local_image_registry
  static:
    metricbeat:
      services:
        - endpoint: internal
          service: kibana
    image_repo_sync:
      services:
        - endpoint: internal
          service: local_image_registry

conf:
  metricbeat:
    setup:
      dashboards:
        enabled: true
        index: metricbeat-*
        retry:
          enabled: true
          interval: 5
      kibana:
        host: "${KIBANA_HOST}:${KIBANA_PORT}"
        username: "${ELASTICSEARCH_USERNAME}"
        password: "${ELASTICSEARCH_PASSWORD}"
    metricbeat:
      config:
        modules:
          path: ${path.config}/modules.d/*.yml
          reload:
            enabled: true
    output:
      elasticsearch:
        hosts: ['${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT}']
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}
  modules:
    docker:
      - module: docker
        metricsets:
          - "container"
          - "cpu"
          - "diskio"
          - "healthcheck"
          - "info"
          - "image"
          - "memory"
          - "network"
        hosts: ["unix:///var/run/docker.sock"]
        period: 10s
        enabled: true
    system:
      - module: system
        period: 10s
        metricsets:
          - cpu
          - load
          - memory
          - network
          - process
          - process_summary
          - core
          - diskio
          - socket
          - filesystem
          - fsstat
        processes: ['.*']
        cpu.metrics: ["percentages"]
        core.metrics: ["percentages"]
        process.include_top_n:
          by_cpu: 5
          by_memory: 5
        enabled: true
    daemonset_kubernetes:
      - module: kubernetes
        metricsets:
          - node
          - system
          - pod
          - container
          - volume
        period: 10s
        hosts: ["localhost:10255"]
        add_metadata: true
        in_cluster: true
        enabled: true
    deployment_kubernetes:
      - module: kubernetes
        metricsets:
          - state_node
          - state_deployment
          - state_replicaset
          - state_pod
          - state_container
          - event
        period: 10s
        hosts: ['${KUBE_STATE_METRICS_HOST}:${KUBE_STATE_METRICS_PORT}']
        add_metadata: true
        in_cluster: true
        enabled: true

endpoints:
  cluster_domain_suffix: cluster.local
  local_image_registry:
    name: docker-registry
    namespace: docker-registry
    hosts:
      default: localhost
      internal: docker-registry
      node: localhost
    host_fqdn_override:
      default: null
    port:
      registry:
        node: 5000
  kube_state_metrics:
    namespace: null
    hosts:
      default: kube-state-metrics
    host_fqdn_override:
      default: null
    path:
      default: null
    scheme:
      default: 'http'
    port:
      metrics:
        default: 8080
  elasticsearch:
    namespace: null
    name: elasticsearch
    auth:
      admin:
        username: admin
        password: changeme
    hosts:
      data: elasticsearch-data
      default: elasticsearch-logging
      discovery: elasticsearch-discovery
      public: elasticsearch
    host_fqdn_override:
      default: null
    path:
      default: null
    scheme:
      default: http
    port:
      http:
        default: 80
  kibana:
    name: kibana
    namespace: osh-infra
    hosts:
      default: kibana-dash
      public: kibana
    host_fqdn_override:
      default: null
    path:
      default: null
    scheme:
      default: http
    port:
      kibana:
        default: 5601
      http:
        default: 80

pod:
  affinity:
    anti:
      type:
        default: preferredDuringSchedulingIgnoredDuringExecution
      topologyKey:
        default: kubernetes.io/hostname
      weight:
        default: 10
  lifecycle:
    upgrades:
      daemonsets:
        pod_replacement_strategy: RollingUpdate
        metricbeat:
          enabled: true
          min_ready_seconds: 0
          max_unavailable: 1
  dns_policy: "ClusterFirstWithHostNet"
  replicas:
    metricbeat: 1
  resources:
    metricbeat:
      enabled: false
      limits:
        memory: '400Mi'
        cpu: '400m'
      requests:
        memory: '100Mi'
        cpu: '100m'
  tolerations:
    metricbeat:
      enabled: false
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
      - key: node-role.kubernetes.io/node
        operator: Exists
  mounts:
    metricbeat:
      metricbeat:

manifests:
  configmap_bin: true
  configmap_etc: true
  daemonset: true
  deployment: true
  job_image_repo_sync: true
  secret_elasticsearch: true
...
